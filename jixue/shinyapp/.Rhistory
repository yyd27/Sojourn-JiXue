sum(vec*r4)
5+12+21+32
182+219
18.8+34.59
53.39/5
?contrasts
x = c(300,310,290)
sd(x)
3951*0.54
255+1000+40+300+140
dot(u,r1)
u*r1
u = c(1, 0.25, 0, 0, 0.5, 0)
v = c(0.75, 0, 0, 0.2, 0.4, 0)
w = c(0, 0.1, 0.75, 0, 0, 1)
r1 = c(1, -1, 1, -1, 1, -1)
r2 = c(-1, -1, 1, 1, -1, 1)
r3 = c(1, 1, 1, 1, 1, 1)
u*r1
sign(sum(u*r1))
unew = c(sign(sum(u*r1)),sign(sum(u*r2)),sign(sum(u*r3)))
vnew = c(sign(sum(v*r1)),sign(sum(v*r2)),sign(sum(v*r3)))
wnew = c(sign(sum(w*r1)),sign(sum(w*r2)),sign(sum(w*r3)))
library(lsa)
cos_uv = sum(unew*vnew)/(sqrt(sum(unew^2))*sqrt(sum(vnew^2)))
cos_uw = sum(unew*wnew)/(sqrt(sum(unew^2))*sqrt(sum(wnew^2)))
cos_vw = sum(wnew*vnew)/(sqrt(sum(wnew^2))*sqrt(sum(vnew^2)))
install.packages("lsa")
library(lsa)
cosine(unew,vnew)
cosine(unew,wnew)
cosine(vnew,wnew)
w = 0.6^3
x = 0.4^3
# 2 functions from h and the OR:
y = 1-(1-0.6)^2
z = 1-(1-0.4)^2
w
x
y
z
6*0.2+1
4*0.2+1
(2.8-1)/0.8
(2.8-2)/0.8
5/4+9/4-5/4
(3-1)/0.8
(3-2)/0.8
(2.6-1)/0.8
(2.6-2)/0.8
w = 0.6^3
x = 0.4^3
# 2 functions from h and the OR:
y = 1-(1-0.6)^2
z = 1-(1-0.4)^2
x
2566*12
115+59
log(50)
1365/2
library(ggplot2)
dat.plot = data.frame(X = c("RT pre-'to'", "LogLenThm","Variety","Def of Theme", "Item Order"),
Y = c(175, 49, 20, 5, -3))
p <- ggplot(data = dat.plot, aes(x = X, y = Y)) + geom_bar()
p
View(dat.plot)
p <- ggplot(data = dat.plot, aes(x = X, y = Y)) + geom_col()
p
p <- ggplot(data = dat.plot, aes(x = X, y = Y)) + geom_col() +
coord_flip()
p
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(-25,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
#  theme(legend.title=element_blank(),
#        legend.position = c(0.9,0.75),
#        plot.title = element_text(size=10, hjust = 0.5, color = "#999999"),
#        plot.margin = unit(c(1,3,1,1), "lines")
#  ) +
coord_flip()
p
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(-25,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=20),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "grey90", size = 0.5),
panel.grid.minor = element_line(colour = "grey95", size = 0.5)) +
coord_flip()
p
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(-25,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=16),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "grey90", size = 0.5),
panel.grid.minor = element_line(colour = "grey95", size = 0.5)) +
coord_flip()
p
dat.plot = data.frame(X = c("RT pre-'to'", "LogLenThm","Variety","Def of Theme", "Item Order"),
Y = c(175, 49, 20, 5, 3))
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(0,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=16),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "grey90", size = 0.5),
panel.grid.minor = element_line(colour = "grey95", size = 0.5)) +
coord_flip()
p
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(0,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=16),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "grey90", size = 0.5),
panel.grid.minor = element_line(colour = "grey95", size = 0.5),
panel.border = element_rect(colour = "black", fill=NA, size=0.5)
) +
coord_flip()
p
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(0,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=16),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "grey90", size = 0.5),
panel.grid.minor = element_line(colour = "grey95", size = 0.5),
panel.border = element_rect(colour = "black", fill=NA, size = 1)
) +
coord_flip()
p
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(0,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=16),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "white", size = 0.5),
panel.grid.minor = element_line(colour = "white", size = 0.5),
panel.border = element_rect(colour = "black", fill=NA, size = 1)
) +
coord_flip()
p
dat.plot = data.frame(X = c("RT pre-'to'\n***", "LogLenThm","Variety","Def of Theme", "Item Order"),
Y = c(175, 49, 20, 5, 3))
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(0,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=16),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "white", size = 0.5),
panel.grid.minor = element_line(colour = "white", size = 0.5),
panel.border = element_rect(colour = "black", fill=NA, size = 1)
) +
coord_flip()
p
dat.plot = data.frame(X = c("RT pre-'to'\n***", "LogLenThm\n***","Variety\n***","Def of Theme\n*", "Item Order\n***"),
Y = c(175, 49, 20, 5, 3))
p <- ggplot(data = dat.plot, aes(x = reorder(X, Y), y = Y)) + geom_col() +
scale_y_continuous(breaks=seq(0, 175, 50),limits = c(0,175)) +
labs(x = "predictor removed from full model", y = "increase in -2 log likelihood") +
theme(legend.position="none",
text = element_text(size=16),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white", colour = NA),
panel.grid.major = element_line(colour = "white", size = 0.5),
panel.grid.minor = element_line(colour = "white", size = 0.5),
panel.border = element_rect(colour = "black", fill=NA, size = 1)
) +
coord_flip()
p
d = data.frame(chars = c("foo boo","at","i am i is"), types = c("a","b","a"))
View(d)
library(dplyr)
d <- d %>% mutate(nchars = nchar(chars))
d <- d %>% mutate(nchars = nchar(as.character(chars)))
d <- d %>% mutate(splits = unlist(strsplit(as.character(chars)," ")))
strsplit(d$chars[1]," ")
strsplit(d$chars[1])
strsplit("2 3 4"," ")
d$chars[1]
strsplit(as.character(d$chars[1])," ")
strsplit(as.character(d$chars[1])," ")[1]
unlist(strsplit(as.character(d$chars[1])," "))
d <- d %>% mutate(splits = length(unlist(strsplit(as.character(chars)," "))))
d <- d %>% mutate(splits = nchar(unlist(strsplit(as.character(chars)," "))))
d <- d %>% mutate(splits = unlist(strsplit(as.character(chars)," "))[1])
df <- data.frame(matrix(ncol = 10000, nrow = 0))
for (i in 1:2000)
{
# set.seed(234)  # Set random number generator
n <- 200  # Number of observations
x1 <- runif(n, min = 0, max = 10) # Random covariate
x2 <- rnorm(n, 0, 10)
y <- 0.5 * x1 + x2+ rnorm(n, mean = 0, sd = 2)
summary(lm(y~x1+x2))[[4]]
loop = rep (i,3)
df1=cbind(summary(lm(y~x1+x2))[[4]] , loop )
df=as.data.frame(rbind(df, df1))
}
View(df)
2.4+4.8+6.6+6.6+4.8+12.9
38.1+18
showClass("MxModel")
library(Openmx)
library(OpenMx)
install.packages("OpenMx")
library(OpenMx)
showClass("MxModel")
2098*1.1
12*24
288*6
1728 + (20+6+12)*6
1728 + (20+6+12)*6 + 30+40
0.99*log(0.99)+0.005*log(0.005)*2
log(2,1)
?log
log(1,base=2)
log(0.5,base=2)
0.99*log(0.99,base=0.2)+0.005*log(0.005,base=2)*2
0.99*log(0.99,base=2)+0.005*log(0.005,base=2)*2
13/17
100/8.25
x = c(1,2,3)
y = c(2,3,4)
setdiff(x,y)
?head
42.4+15.98+2.95
15.98+2.95
61.33/5
(2938+3843)*0.5*6
(3216+3247)*2.63
(3216+3247)*2.63*1.4
570/0.6
234+699
463-337
1247-1010
127+36
418/(418+444)
1365/2
4220/6505
1.25*6
21.84/2
2500*12
24*3.4
450000/12
2400/60
3000/60
30/20
1.5*2400
3600/60
11.6/13.4
60*0.8656716
2400/16
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(stringi)
library(lme4)
library(mgcv)
library(gamm4)
# create raw text file, including textlinenum, freq, log-prob (surprisal), and H
# due to different ways handling punctuation, different data frame may have different row numbers
#
dat.text0 = read.delim('../Data/full_dundee_lines.txt',sep=",",header = FALSE)
colnames(dat.text0) <- c("textid","wordnum","word")
dat.textlinenum = read.csv('../Data/all_dundee_text.csv')
df.freq = read.delim('../Data/Vocab1120Freq.txt',sep="\t",header = FALSE)
colnames(df.freq) <- c("freq","word")
df.surp = read.csv('../Data/token_surprisal_kenlm5gram.csv',header = FALSE)
colnames(df.surp) <- c("textid","wordnum","word","surprisal")
dat.pred <- read.csv('../Data/Hpred_1128.csv')
# for dat.text, find out the screennum/linenum/etc.
dat.text <- left_join(dat.text0, dat.textlinenum,
by=c("textid"="textid","wordnum"="textpos")) %>%
inner_join(., df.freq, by = c("word"="word")) %>%
inner_join(.,df.surp, by=c('wordnum'='wordnum','textid'='textid','word'='word'))%>%
inner_join(.,dat.pred,by = c('wordnum'='wordnum','textid'='textid','word'='word'))%>%
select(textid,wordnum,word,screennum,linenum,linepos,letterxpos0,freq,surprisal,H)
# letterxpos0: The initial letter position of the Text Word on an 81-character line (the space to the left of each word counting as its initial letter)
rm(df.freq,df.surp,dat.pred,dat.textlinenum,dat.text0)
# since there are some errors, manually remove those problematic cases
# Meanwhile, remove non-alphabetic word as well; remove words didn't appear in 1b corpus
# remove first 2 and last 2 words on a line
dat.text <- dat.text %>% mutate(flag = paste(textid,wordnum,word,sep='%'),
isPure0 = str_match_all(word,"^[a-zA-Z]+$"),
isPure = ifelse(isPure0 == word,TRUE,FALSE))
dat.text.sum <- dat.text %>%
group_by(flag) %>%
summarise(N = n()) %>% filter(N > 1)
dat.text <- dat.text %>% group_by(textid,screennum,linenum) %>%
mutate(maxlinepos = max(linepos),
isStartEnd = ifelse(linepos <= 2 | (linepos+1) >= maxlinepos, 1, 0)) %>%
ungroup()
dat.text1 <- dat.text %>% filter(!(flag %in% dat.text.sum$flag) &
isPure == TRUE & !is.na(freq) &
isStartEnd == 0) %>%
select(-isPure0,-isPure,-flag,-isStartEnd)
# final text
dt <- bind_rows(replicate(10, dat.text1, simplify = FALSE))
ppts = c('a','b','c','d','e','f','g','h','i','j')
dt$ppt = rep(ppts, each = nrow(dat.text1))
rm(dat.text1, dat.text.sum, dat.text)
##### read in Dundee fixation file
dat.dun = read.delim('../Data/dundee_skipping1130.txt',sep = " ",quote=NULL)
# Ensure that all fixations in dat.dun.fp is the first time a word is fixated
allflag = unique(paste(dt$textid,dt$wordnum,sep='%'))
dat.dun.fp1 <- dat.dun %>% filter(isskip != 'exclude' & isskip != 'skip') %>%
mutate(flag = paste(text,wordnum,sep='%')) %>%
filter(flag %in% allflag) %>%
select(-flag)
#########################################
dt$skpstate = -99
dt$launch = -99
# iterate over each line
alllines = unique(paste(dt$ppt,dt$textid,dt$screennum,dt$linenum,sep='%'))
dat.newskip = data.frame()
for (i in 1:length(alllines)){
tempi = unlist(strsplit(alllines[i], "%"))
tppt = tempi[1]
ttext = tempi[2]
tscrn = tempi[3]
tline = tempi[4]
tempdf = dt %>% filter(ppt == tppt & textid == ttext & screennum == tscrn & linenum == tline)
tempdun = dat.dun.fp1 %>% filter(ppt == tppt & text == ttext & screennum == tscrn & linenum == tline)
if (nrow(tempdun) == 0){
tempdf$skpstate = 'full_line_skip'
} else{
# for tempdun, make a list of fixation positions
xposes = as.numeric()
for (j in 1:nrow(tempdun)){
launpos = tempdun$xpos[j] + tempdun$laun[j]
if (launpos >= 0){
if (length(xposes) == 0){
xposes = c(xposes,launpos)
}
else {
if (xposes[length(xposes)] != launpos){
xposes = c(xposes,launpos)
}
}
}
}
xposes = c(xposes, tempdun$xpos[nrow(tempdun)])
# Given this list of fixations, compute the skipping state of each word in dt/tempdf
for (k in 1:nrow(tempdf)){
lxpos = tempdf$letterxpos0[k]
rxpos = tempdf$letterxpos0[k] + nchar(tempdf$word[k])
# find the current/previous fixation in xposes
tm = max(xposes[xposes <= rxpos])
idx = which(xposes == tm)
if (tm >= lxpos){ # there is a fixation right on the word
if (idx == 1){
tempdf$skpstate[k] = 'ex'
} else {
tempdf$launch[k] = xposes[idx-1]-lxpos
tempdf$skpstate[k] = 'fp'
}
} else { # there is no fixation on the word
tempdf$skpstate[k] = 'sk'
tempdf$launch[k] = tm - lxpos
}
}
}
dat.newskip = rbind(dat.newskip,tempdf)
}
# check dat.newskip, and replace skp with exc (i.e. involving blink etc.)
# if both 'unknown' and 'exclude' appears, then only keep 'unknown'; otherwise keep what it is
dat.dun3 <- dat.dun %>% group_by(ppt,text,word,screennum,linenum,wordnum,isskip) %>%
summarise(val = n()) %>%
spread(isskip,val)
dat.dun3[is.na(dat.dun3)] = -99
#dat.dun3$exclude[is.na(dat.dun3$exclude)] = -99
#dat.dun3$unknown[is.na(dat.dun3$unknown)] = -99
#dat.dun3$skip[is.na(dat.dun3$skip)] = -99
#dat.dun3$SE[is.na(dat.dun3$SE)] = -99
dat.dun3 <- dat.dun3 %>%
mutate(skipstate = ifelse(unknown==-99 & exclude == -99 & skip == -99,'se',
ifelse(unknown == 1, 'fp',
ifelse(exclude > 0, 'ex','sk')))) %>%
arrange(ppt,text,wordnum)
dat.dun3.ex <- dat.dun3 %>% mutate(flag = paste(text,wordnum,sep='%')) %>%
filter(flag %in% allflag) %>% select(-flag) %>%
filter(skipstate == 'ex')
allex = unique(paste(dat.dun3.ex$ppt,
dat.dun3.ex$text,
dat.dun3.ex$screennum,
dat.dun3.ex$linenum,
dat.dun3.ex$wordnum,sep='%'))
dat.newskip1 <- dat.newskip %>%
mutate(flag = paste(ppt,textid,screennum,linenum,wordnum,sep="%")) %>%
mutate(isex = ifelse(flag %in% allex, 1, 0)) %>%
filter(isex == 0)
(13+14+17)/3
(70+77+75)/3
5*40*20*10
38283/4000
16-2
14/4
28-24.53
3.47/22
90/6
4.3+3.9+2.4
4.8+4.5+4.4+5.3
87627/101462
87626-506
12*13+60+60
7788-7466
322-276
131/22963
680/22000
12000000/3600
3333/24
21.22/2
23+48
31000/500
1167.23/26100
library(aod)
col1 = rnorm(100)
col2 = rnorm(100)
col3 = rnorm(100)
col4 = ifelse(col3 > 0.5, 1, 0)
mean(col4)
dat <- data.frame(list(x1 = col1, x2 = col2, y = col4))
m1 <- glm(y ~ x1 + x2, data = dat, family ="binomial");summary(m1)
View(dat)
dat2 <- replicate(20,dat1)
dat2 <- replicate(20,dat)
dat2 <- replicate(20,dat,simplify = FALSE)
dat2 = data.frame(dat2)
View(dat2)
dat2 <- bind_rows(replicate(20,dat,simplify = FALSE))
library(dplyr)
dat2 <- bind_rows(replicate(20,dat,simplify = FALSE))
View(dat2)
dat$item = 1:nrow(dat)
View(dat)
dat2 <- bind_rows(replicate(20,dat,simplify = FALSE))
col4 = rnorm(nrow(dat2))
col3 = ifelse(col4 > 0.5, 1, 0)
mean(col3)
dat2$y = col3
mean(dat2$y)
m1 <- glm(y ~ x1 + x2, data = dat2, family ="binomial");summary(m1)
dat3 <- dat2 %>% group_by(x1,x2,item) %>% summarise(y = mean(y))
View(dat3)
dat3 <- dat3 %>% mutate(succ = 20*y, fail = 20-succ)
View(dat3)
m2 <- glm(cbind(succ,fail) ~ x1 + x2, data = dat3, family ="binomial");summary(m2)
m1
m2
summary(m1)
summary(m2)
21651/3
6956*3
library(MASS)
data("housing")
housing
options(contrasts = c("contr.treatment", "contr.poly"))
house.plr <- polr(Sat ~ Infl + Type + Cont, weights = Freq, data = housing)
house.plr
summary(house.plr, digits = 3)
library(ordinal)
install.packages("ordinal")
library(ordinal)
summary(house.plr, digits = 3)
house.clm <- clm(Sat ~ Infl + Type + Cont, weights = Freq, data = housing)
summary(house.clm)
4/21
1375/2
1385/2
?qbeta
install.packages("shiny")
library(shiny)
runExample("01_hello")
runExample("03_reactivity")
runExample("08_html")
runExample("09_upload")
runExample("10_download")
runExample("01_hello")
shiny::runApp('Documents/CHN/Poem/src/shinyapp')
shiny::runApp('Documents/CHN/Poem/src/mysite/shinyapp')
library(shiny)
runExample("01_hello")
shiny::runApp('Documents/CHN/Poem/src/djangoapp/shinyapp')
library(corpus)
install.packages("corpus")
r = 56
84.5/30
shiny::runApp('Documents/CHN/Poem/src/shinyapp')
runApp('Documents/CHN/Poem/src/shinyapp')
setwd("~/Documents/CHN/Poem/src/jixue/shinyapp")
shiny::runApp()
install.packages("DT")
runApp()
runApp()
